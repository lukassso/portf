version: 2.1
jobs:
  build:
    docker:
      - image: alpine:3.7
    steps:
      - checkout
      - run:
          name: The First Step
          command: |
            echo 'Hello World!'
            echo 'This is the delivery pipeline'
      - run:
          name: Code Has Arrived
          command: |
            ls -al
            echo '^^^That should look familiar^^^'
 codechecks:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get update -y
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get upgrade -y
      - run:
          name: Install Chrome headless dependencies
          working_directory: /
          command: |
            sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
            libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
            ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget --fix-missing
      - checkout
      - restore_cache:
            keys:
            - v3-dependencies-{{ checksum "package.json" }}
      - run: PUBLIC_URL=. ENV=dev yarn build
      - run: yarn codechecks

  codechecks-e2e:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get update -y
      - run:
          name: Update
          working_directory: /
          command: |
            sudo apt-get upgrade -y
      - run:
          name: Install Chrome headless dependencies
          working_directory: /
          command: |
            sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
            libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
            ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget --fix-missing
      - checkout
      - restore_cache:
            keys:
            - v3-dependencies-{{ checksum "package.json" }}
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Copy all screenshots in one place
          working_directory: /tmp/workspace
          command: |
            mkdir -p /home/circleci/project/__screenshots__
            cp `find  | grep png` /home/circleci/project/__screenshots__
      - run:
          command: yarn codechecks-e2e

  deploy_dev:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - checkout
      - restore_cache:
            keys:
            - v3-dependencies-{{ checksum "package.json" }}
      - run: yarn run deploy:dev

  deploy_stage:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - checkout
      - restore_cache:
            keys:
            - v3-dependencies-{{ checksum "package.json" }}
      - run: yarn run deploy:stage

  deploy_prod:
    docker:
      - image: circleci/node:8.11.2-stretch
    steps:
      - add_ssh_keys:
          fingerprints:
            - "2d:ec:2f:f5:b6:10:8c:8a:e7:9f:f3:c9:77:25:b7:0b"
      - checkout
      - restore_cache:
            keys:
            - v3-dependencies-{{ checksum "package.json" }}
      - run:
          name: Configure git defaults
          command:  git config user.email "circleci@makerdao.com" && git config user.name "CircleCI"
      - run:
          name: Deploying to production
          command: yarn run deploy:prod
